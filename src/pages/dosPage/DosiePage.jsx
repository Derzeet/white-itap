import React, { useState, useEffect } from 'react';
import { useParams } from "react-router-dom";
import default_host from '../../config/config';

import './dosiePage.scss'
import './loader.scss'

import IconButton from '@mui/material/IconButton';
import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
import KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';

import Navbar from '../../components/dossierComponents/nav-bar/Navbar';
import LeftTopFrame from '../../components/dossierComponents/left-top-frame/LeftTopFrame';
import RightTopFrame from '../../components/dossierComponents/rigth-top-frame/RightTopFrame';
import LeftBottomFrame from '../../components/dossierComponents/left-bottom-frame/LeftBottomFrame';
import RightBottomFrame from '../../components/dossierComponents/right-bottom-frame/RightBottomFrame';
import SearchBar from '../../components/dossierComponents/search-bar/SearchBar';
import axios from 'axios';
import SideBar from '../../components/side-bar';
const baseURL = 'http://192.168.30.24:9095/'
const DosiePage = (props) => {
    const [leftTopFrameData, setLeftTopFrameData] = useState({});
    const [docs, setDocs] = useState([])
    const [transport, setTransport] = useState([])
    const [relatives, setRelatives] = useState([])
    const [addresses, setAddresses] = useState([])
    const [photo, setPhoto] = useState([])
    const [base, setBase] = useState('')
    const { iin } = useParams();
    const [loading, isLoading] = useState(null)

    const [photos, setPhotos] = useState([])

    // risks
    const [criminals, setCriminals] = useState([])
    const [convicts, setConvicts] = useState([])
    const [schools, setSchools] = useState([])
    const [universities, setUniversities] = useState([])
    const [pensions, setPensions] = useState([])
    const [military, setMilitary] = useState([])
    const [militaryEntities, setMilitaryEntities] = useState([])
    const [nedvijimost, setNedvijimost] = useState([])
    const [contacts, setContacts] = useState([])
    const [firstCreditBureauEntities, setFirstCreditBureauEntities] = useState([])
    const [blockEsf, setBlockEsf] = useState([])
    const [equipment, setEquipment] = useState([])
    const [mzEntities, setMzEntities] = useState([])
    const [convictsTerminatedByRehabs, setConvictsTerminatedByRehabs] = useState([])

    const [accountantListEntities, setAccountantListEntities] = useState([])
    const [advocateListEntities, setAdvocateListEntities] = useState([])
    const [auditorsListEntities, setAuditorsListEntities] = useState([])
    const [bailiffListEntities, setBailiffListEntities] = useState([])
    const [ipgoEmailEntities, setIpgoEmailEntities] = useState([])
    const [detdom, setDetdom] = useState([])
    const [adms, setAdms] = useState([])
    const [ulLeaders, setUlLeaders] = useState([]) // Ul svedenia ob uchastiy
    const [flUlFounders, setFlUlFounders] = useState([])
    const [wantedList, setWantedList] = useState([])

    const [commodityProducers, setCommodityProducers] = useState([])

    const [pdl, setPdl] = useState([])

    const [menuOpen, setMenuOpen] = useState(false)

    useEffect(() => {
        const searchIIN = () => {
            isLoading(true)
            const params = {iin: iin}

            // const tempData = {
            //     "mvFls": [
            //         {
            //             "iin": "021010601751",
            //             "gender": "2",
            //             "birth_date": "2002-10-10",
            //             "last_name": "ЗАСЕДАТЕЛЬ",
            //             "first_name": "АНЕЛЯ",
            //             "patronymic": "ЕРБОЛОВНА",
            //             "citizenship_id": "105",
            //             "citizenship_ru_name": "КАЗАХСТАН",
            //             "nationality_id": "135",
            //             "nationality_ru_name": "КАЗАХ",
            //             "is_resident": true,
            //             "life_status_id": "1",
            //             "life_status_ru_name": "Нормальный",
            //             "death_date": "",
            //             "birth_region_id": "73",
            //             "birth_region_name": "",
            //             "birth_district_id": "4",
            //             "birth_district_name": "",
            //             "region": "МЕДЕУСКИЙ",
            //             "district": "АЛМАТЫ"
            //         }
            //     ],
            //     "photoDbf": [
            //         {
            //             "iin": "021010601751",
            //             "document_type_id": "2",
            //             "photo": "",
            //             "date": "2019-03-01 11:22:47"
            //         }
            //     ],
            //     "mvAutoFls": [],
            //     "omns": [
            //         null
            //     ],
            //     "orphanss": [],
            //     "equipment": [],
            //     "dormants": [],
            //     "adms": [],
            //     "fl_relatives": [
            //         {
            //             "id": 72664573,
            //             "iin": "021010601751",
            //             "fio": "КОЗЛОВА АНЕЛЯ ЕРБОЛОВНА",
            //             "birth_date": "2002/10/10:12:00:00 AM",
            //             "parent_iin": null,
            //             "parent_fio": "КОЗЛОВ ЕРБОЛ КАСЫМЖАНОВИЧ",
            //             "parent_birth_date": null,
            //             "relative_type": "Ребенок",
            //             "marriage_reg_date": null,
            //             "marriage_divorce_date": null
            //         },
            //         {
            //             "id": 81427660,
            //             "iin": "021010601751",
            //             "fio": "КОЗЛОВА АНЕЛЯ ЕРБОЛОВНА",
            //             "birth_date": "2002/10/10:12:00:00 AM",
            //             "parent_iin": null,
            //             "parent_fio": "КОЗЛОВА ВАЛЕНТИНА СЕРГЕЕВНА",
            //             "parent_birth_date": "1982/08/30:12:00:00 AM",
            //             "relative_type": "Ребенок",
            //             "marriage_reg_date": null,
            //             "marriage_divorce_date": null
            //         }
            //     ],
            //     "regAddressFls": [
            //         {
            //             "id": null,
            //             "fl_id": null,
            //             "iin": "021010601751",
            //             "registration_type": "Зарегистрирован",
            //             "country": "КАЗАХСТАН",
            //             "region": "МЕДЕУСКИЙ",
            //             "district": "АЛМАТЫ",
            //             "city": null,
            //             "street": "УЛИЦА Говорова",
            //             "building": "61",
            //             "korpus": null,
            //             "apartment_number": null,
            //             "reg_date": "2020/01/18:12:00:00 AM",
            //             "reg_end_date": null,
            //             "reg_reason": "Зарегистрирован",
            //             "is_active": null
            //         }
            //     ],
            //     "pdls": [],
            //     "mvIinDocs": [
            //         {
            //             "id": "2cfd964d-52e5-420d-bfdc-b345b987e86e",
            //             "gender": "2",
            //             "birth_date": "2002-10-10",
            //             "iin": "021010601751",
            //             "citizenship_id": "105",
            //             "citizenship_ru_name": "КАЗАХСТАН",
            //             "nationality_id": "135",
            //             "nationality_ru_name": "КАЗАХ",
            //             "is_resident": true,
            //             "life_status_id": "1",
            //             "life_status_ru_name": "Нормальный",
            //             "death_date": null,
            //             "doc_number": "051876867",
            //             "doc_type_id": "2",
            //             "doc_type_ru_name": "УДОСТОВЕРЕНИЕ РК",
            //             "issue_date": "2022-10-26",
            //             "expiry_date": "2032-10-25",
            //             "document_invalidity_id": "0",
            //             "document_invalidity_ru_name": "ДОКУМЕНТ ДЕЙСТВИТЕЛЕН",
            //             "document_invalidity_date": null,
            //             "issue_organization_id": "2",
            //             "issue_organization_ru_name": "МИНИСТЕРСТВО ВНУТРЕННИХ ДЕЛ РК"
            //         }
            //     ],
            //     "criminals": [],
            //     "universities": [
            //         {
            //             "id": 2457937,
            //             "lastname": "КОЗЛОВА",
            //             "name": "АНЕЛЯ",
            //             "patronymic": "ЕРБОЛОВНА",
            //             "iin": "021010601751",
            //             "start_date": "2018-08-31",
            //             "five": "КПК 1-2",
            //             "spec_name_2": null,
            //             "course": null,
            //             "duration": "4",
            //             "spec_name": null,
            //             "study_name": "Учреждение \"Евразийский технико-экономический колледж\"",
            //             "study_type": "колледж",
            //             "study_code": "051240004259",
            //             "end_date": "2019-08-29",
            //             "fourteen": null,
            //             "fiveteen": null,
            //             "sixteen": "1"
            //         }
            //     ],
            //     "schools": [
            //         {
            //             "id": 4500897,
            //             "lastname": "КОЗЛОВА",
            //             "name": "АНЕЛЯ",
            //             "patronymic": "ЕРБОЛОВНА",
            //             "iin": "021010601751",
            //             "start_date": "2010-09-01",
            //             "grade": "9 класс",
            //             "school_name": "КГУ \"Общеобразовательная школа №99\"",
            //             "school_type": "общеобразовательная школа",
            //             "school_code": "990440002728",
            //             "breast_plate": "получил аттестат об основном образовании",
            //             "end_date": "2018-09-03",
            //             "ten": null,
            //             "twelve": "продолжил обучение в школе",
            //             "thirdteen": "2"
            //         },
            //         {
            //             "id": 4500898,
            //             "lastname": "КОЗЛОВА",
            //             "name": "АНЕЛЯ",
            //             "patronymic": "ЕРБОЛОВНА",
            //             "iin": "021010601751",
            //             "start_date": "2019-09-07",
            //             "grade": "11 класс",
            //             "school_name": "КГУ \"Общеобразовательная школа №29\" ",
            //             "school_type": "общеобразовательная школа",
            //             "school_code": "990440003240",
            //             "breast_plate": "получил аттестат о среднем образовании",
            //             "end_date": "2020-05-25",
            //             "ten": null,
            //             "twelve": "другое",
            //             "thirdteen": "2"
            //         }
            //     ],
            //     "contacts": [
            //         {
            //             "iin": "021010601751",
            //             "phone": "7478414319",
            //             "fio": "anelya",
            //             "email": null,
            //             "nickname": null,
            //             "source": null,
            //             "leader_fio": null,
            //             "id": 1390573
            //         },
            //         {
            //             "iin": "021010601751",
            //             "phone": "7478414319",
            //             "fio": "ЗАСЕДАТЕЛЬ АНЕЛЯ ЕРБОЛОВНА",
            //             "email": null,
            //             "nickname": null,
            //             "source": "kazpost",
            //             "leader_fio": null,
            //             "id": 4815047
            //         }
            //     ],
            //     "millitaryAccounts": [],
            //     "militaryAccounting2Entities": [],
            //     "convictsTerminatedByRehabs": [],
            //     "convictsJustifieds": [],
            //     "bankrots": [],
            //     "flPensionContrs": [
            //         {
            //             "years": [
            //                 "2021.0"
            //             ],
            //             "nakoplenya": [
            //                 {
            //                     "amount": "63000",
            //                     "KNP": "010"
            //                 },
            //                 {
            //                     "KNP": "012",
            //                     "amount": "19845"
            //                 }
            //             ],
            //             "flPensionMinis": [
            //                 {
            //                     "payDate": "2021",
            //                     "pName": "ИП Козлова",
            //                     "knp": "010",
            //                     "amount": 63000
            //                 },
            //                 {
            //                     "payDate": "2021",
            //                     "pName": "ИП Козлова",
            //                     "knp": "012",
            //                     "amount": 19845
            //                 }
            //             ],
            //             "companyBin": "021010601751"
            //         }
            //     ],
            //     "mshes": [],
            //     "blockEsfs": [
            //         {
            //             "id": 1,
            //             "iin_bin": "021010601751",
            //             "start_dt": "2021-11-12",
            //             "end_dt": null,
            //             "update_dt": "2021-11-12"
            //         }
            //     ],
            //     "mvUlFounderFls": [],
            //     "ndsEntities": [],
            //     "ipgoEmailEntities": [],
            //     "accountantListEntities": [],
            //     "advocateListEntities": [],
            //     "auditorsListEntities": [],
            //     "bailiffListEntities": [],
            //     "mvRnOlds": [],
            //     "firstCreditBureauEntities": [],
            //     "tipEntity": [
            //         {
            //             "id": 34781,
            //             "iin": "021010601751",
            //             "name": "ИП Козлова",
            //             "fio": "КОЗЛОВА АНЕЛЯ ЕРБОЛОВНА"
            //         }
            //     ],
            //     "orphans": []
            // }

            // console.log(tempData)

            //     setPhoto(tempData.photoDbf)
            //     setLeftTopFrameData(tempData.mvFls)
            //     setRelatives(tempData.fl_relatives)
            //     setBase(tempData.photoDbf[0].photo)
            //     setPhotos(tempData.photoDbf)
            //     // res.data.photoDDFmap()
            //     setAddresses(tempData.regAddressFls)
            //     setDocs(tempData.mvIinDocs)
            //     setTransport(tempData.mvAutoFls)
            //     setSchools(tempData.schools)
            //     setUniversities(tempData.universities)
            //     setCriminals(tempData.criminals)
            //     setConvicts(tempData.convictsJustifieds)
            //     setPensions(tempData.flPensionContrs)
            //     setNedvijimost(tempData.mvRnOlds)
            //     setContacts(tempData.contacts)
            //     setFirstCreditBureauEntities(tempData.firstCreditBureauEntities)
            //     setBlockEsf(tempData.blockEsfs)
            //     setEquipment(tempData.equipment)

            //     setMilitary(tempData.millitaryAccounts)
            //     setMilitaryEntities(tempData.militaryAccounting2Entities)
            //     setMzEntities(tempData.mzEntities)
            //     setConvictsTerminatedByRehabs(tempData.convictsTerminatedByRehabs)

            //     setAccountantListEntities(tempData.accountantListEntities)
            //     setAdvocateListEntities(tempData.advocateListEntities)
            //     setAuditorsListEntities(tempData.auditorsListEntities)
            //     setBailiffListEntities(tempData.bailiffListEntities)

            //     setIpgoEmailEntities(tempData.ipgoEmailEntities)
            //     setDetdom(tempData.orphans)
            //     setAdms(tempData.adms)

            //     setUlLeaders(tempData.ul_leaderList)
            // setFlUlFounders(tempData.mvUlFounderFls)


            //     isLoading(false)

            axios.get(default_host+'profile', {params: params}).then(res => {
                console.log(res.data)

                setPhoto(res.data.photoDbf)
                setLeftTopFrameData(res.data.mvFls)
                setRelatives(res.data.fl_relatives)
                if (res.data.photoDbf && res.data.photoDbf[0].photo) setBase(res.data.photoDbf[0].photo)
                setPhotos(res.data.photoDbf)
                // res.data.photoDDFmap()
                setAddresses(res.data.regAddressFls)
                setDocs(res.data.mvIinDocs)
                setTransport(res.data.mvAutoFls)
                setSchools(res.data.schools)
                setUniversities(res.data.universities)
                setCriminals(res.data.criminals)
                setConvicts(res.data.convictsJustifieds)
                setPensions(res.data.flPensionContrs)
                setNedvijimost(res.data.mvRnOlds)
                setContacts(res.data.contacts)
                setFirstCreditBureauEntities(res.data.firstCreditBureauEntities)
                setBlockEsf(res.data.blockEsfs)
                setEquipment(res.data.equipment)

                setMilitary(res.data.millitaryAccounts)
                setMilitaryEntities(res.data.militaryAccounting2Entities)
                setMzEntities(res.data.mzEntities)
                setConvictsTerminatedByRehabs(res.data.convictsTerminatedByRehabs)
                
                setAccountantListEntities(res.data.accountantListEntities)
                setAdvocateListEntities(res.data.advocateListEntities)
                setAuditorsListEntities(res.data.auditorsListEntities)
                setBailiffListEntities(res.data.bailiffListEntities)
                setWantedList(res.data.wantedListEntities)

                setIpgoEmailEntities(res.data.ipgoEmailEntities)
                setDetdom(res.data.orphans)
                setAdms(res.data.adms)

                setUlLeaders(res.data.ul_leaderList)
                setFlUlFounders(res.data.mvUlFounderFls)
                setCommodityProducers(res.data.commodityProducers)

                setPdl(res.data.pdls)


                isLoading(false)
            })
        }

        searchIIN()
    }, [iin])

    if (base != '') {
        return (  
            <>
                <div className='dosiePage'>
                    <div className="central-bar">
                        <div className="frames">
                            <LeftTopFrame photo={base} photos={photos} data={leftTopFrameData}/>
                            <RightTopFrame relatives={relatives}/>
                            <LeftBottomFrame flUlFounders={flUlFounders} ulLeaders={ulLeaders} docs={docs} addresses={addresses} transport={transport} 
                                schools={schools} universities={universities} pensions={pensions} military={military} militaryEntities={militaryEntities}
                                nedvijimost={nedvijimost} contacts={contacts} equipment={equipment} accountantListEntities={accountantListEntities} advocateListEntities={advocateListEntities} auditorsListEntities={auditorsListEntities} bailiffListEntities={bailiffListEntities} ipgoEmailEntities={ipgoEmailEntities} commodityProducers={commodityProducers}/>
                            <RightBottomFrame wantedList={wantedList} pdl={pdl} convictsTerminatedByRehabs={convictsTerminatedByRehabs} criminals={criminals} convicts={convicts} firstCreditBureauEntities={firstCreditBureauEntities} blockEsf={blockEsf} mzEntities={mzEntities} detdom={detdom} adms={adms}/>
                        </div>
                    </div>
                </div>
            </>
        );
    } else {
        return (  
            <div className='dosiePage'>
                <div className='loadComponent'>
                    <div className="dim"></div>
                    <div className='load'>
                        <div className="tab11">
                        </div>
                        <div className="tab12">
                        </div>
                        <div className="tab31">
                        </div>
                        <div className="tab32">
                        </div>

                        <div className="loader">
                            <div className="inner one"></div>
                            <div className="inner two"></div>
                            <div className="inner three"></div>
                        </div>
                        
                    </div>
                </div>
            </div>
        );
    }

}

export default DosiePage;